window_spec = Window.orderBy('id').rowsBetween(0, 8)

def find_pattern(df):
    return (df
        # Add row number as id for ordering
        .withColumn('id', F.monotonically_increasing_id())
        # Create a column that checks if next 8 values are all 'n'
        .withColumn('next_8_n', 
            (F.sum(F.when(F.col('value') == 'n', 1).otherwise(0))
            .over(window_spec) == 8))
        # Check if current value is 'p'
        .withColumn('is_p', F.col('value') == 'p')
        # Combine conditions: current is 'p' AND next 8 are 'n'
        .withColumn('pattern_start', 
            F.when(F.col('is_p') & F.col('next_8_n'), 1).otherwise(0))
        # Keep only the first occurrence
        .withColumn('result', 
            F.when(F.sum('pattern_start').over(Window.orderBy('id')) <= 1, 
                  F.col('pattern_start'))
            .otherwise(0))
        # Select only the result column
        .select('result'))
